// Напишите функцию, принимающую к качестве аргумента объект с данными, и возвращающую путь, по которому в этом объекте
// находится поле со значением 15. Путь - это строка, в которую входят все имена полей начиная от самого верхнего уровня,
// разделенные точкой. Значениями свойств объекта могут быть как простые значения, так и другие объекты и массивы.
// Если значение найти не удалось, вернуть null. В объекте всегда не больше одного значения 15.

// Для проверки является ли значение объектом или массивом вы можете использовать проверку if (typeof obj[key] === "object").
//  В реальной жизни нужно использовать более сложные проверки, но для нашего случая подойдет упрощенный вариант.
//  Также в этом примере вы можете использовать цикл for .. in для перебора свойств объекта.

// let obj = {
//   field1: "hello, world",
//   name: "Johnny",
//   t: 99,
//   almostthere: "15",
//   subobj: {
//       name: 13,
//       arr: [
//           { g: -4, k: 1 },
//           { test: NaN, x: 15 }
//       ]
//   },
//   test: "g"
// }
// findPath(obj) === "subobj.arr.1.x";

export default function findPath(obj) {
  let str = "";

  if (Object.keys(obj).length === 0) {
    return null;
  }

  for (const key in obj) {
    if (obj[key] === 15) {
      str = `${key}`;
    } else if (typeof obj[key] === "object") {
      str = `${key}.${findPath(obj[key])}`;
    }

    if (str !== "" && str.lastIndexOf(".") === str.length - 1) {
      str = null;
    }
  }
  return str;
}
